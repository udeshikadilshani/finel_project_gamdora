package sell;

import po.Item_Dub;
import com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel;
import common.Checknull;
import common.Item_DTO;
import common.TbView;
import common.db;
import finel_project_gamdora.main_menu;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.Savepoint;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author udesh
 */
public class sell_item extends javax.swing.JFrame {

    /**
     * Creates new form sell_item
     */
    public sell_item() {
        initComponents();
        screensize() ;
          TbView.tableSettings(jTable1);
          invoiceId();
          txtCustomerId.grabFocus();
          jScrollPane2.setVisible(false);
          jScrollPane3.setVisible(false);
          
          
    }
     double amount;
     double discount;
     double subAmount;
     double avBillAmount;
     double avBillDiscount;
     double netAmount;
      private void screensize() {
      
    this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        btndash = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtInvoiceId = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        txtCustomerId = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtItemId = new javax.swing.JTextField();
        txtStockQty = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtBuyQty = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        txtPayment = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtTotalDiscount = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtNetAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1840, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 240, 10));

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 240, 0));

        btndash.setBackground(new java.awt.Color(0, 0, 51));
        btndash.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btndash.setForeground(new java.awt.Color(255, 255, 255));
        btndash.setText(" DashBoard");
        btndash.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btndash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btndashMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btndashMouseExited(evt);
            }
        });
        btndash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndashActionPerformed(evt);
            }
        });
        getContentPane().add(btndash, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 250, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("  Gamdora Distriburtors");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 220, 40));

        jLabel3.setBackground(new java.awt.Color(0, 102, 0));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 60));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(" invoice No");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 80, 130, 30));

        txtInvoiceId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtInvoiceId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInvoiceIdActionPerformed(evt);
            }
        });
        getContentPane().add(txtInvoiceId, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 80, 240, 30));

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 611, -1, -1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 51));
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 1120));

        jLabel4.setBackground(new java.awt.Color(0, 0, 51));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("   Sell Item");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 1050, 70));

        jButton2.setBackground(new java.awt.Color(0, 0, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("setting");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 10, 70, 30));

        jTable1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.MatteBorder(null), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Unit Price", "Qty", "Amount", "Discount", "Sub Total", "Unit Id"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 620, 350));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Customer Id");
        jLabel14.setToolTipText("");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 200, 30));

        txtCustomerId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIdActionPerformed(evt);
            }
        });
        txtCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyReleased(evt);
            }
        });
        getContentPane().add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 240, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Item Id");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 200, 30));

        txtItemId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemIdActionPerformed(evt);
            }
        });
        txtItemId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemIdKeyReleased(evt);
            }
        });
        getContentPane().add(txtItemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 240, 30));

        txtStockQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtStockQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockQtyActionPerformed(evt);
            }
        });
        txtStockQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockQtyKeyTyped(evt);
            }
        });
        getContentPane().add(txtStockQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 240, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Stock QTY");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 200, 30));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Unit Price");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 200, 30));

        txtUnitPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitPriceActionPerformed(evt);
            }
        });
        txtUnitPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUnitPriceKeyTyped(evt);
            }
        });
        getContentPane().add(txtUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 240, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("Buying QTY");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 200, 30));

        txtBuyQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtBuyQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyQtyActionPerformed(evt);
            }
        });
        txtBuyQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuyQtyKeyTyped(evt);
            }
        });
        getContentPane().add(txtBuyQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 240, 30));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("Unit Discount");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, 200, 30));

        txtDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });
        txtDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiscountKeyTyped(evt);
            }
        });
        getContentPane().add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 390, 240, 30));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setText("Amount");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, 200, 30));

        txtAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });
        getContentPane().add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 240, 30));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("Total Amount");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, 160, 30));

        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalAmountActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, 240, 30));

        txtPayment.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentActionPerformed(evt);
            }
        });
        getContentPane().add(txtPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 550, 240, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setText("Payment");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 510, 160, 30));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setText("Balance");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 610, 160, 30));

        txtBalance.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });
        getContentPane().add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 610, 610, 30));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("Total Discount");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 510, 160, 30));

        txtTotalDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalDiscountActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotalDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 550, 240, 30));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setText("Net Amount");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 510, 160, 30));

        txtNetAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtNetAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetAmountActionPerformed(evt);
            }
        });
        getContentPane().add(txtNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 550, 240, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btndashMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndashMouseEntered
        btndash.setBackground(Color.BLUE);
    }//GEN-LAST:event_btndashMouseEntered

    private void btndashMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndashMouseExited
        btndash.setBackground(new Color(0,0,51));
    }//GEN-LAST:event_btndashMouseExited

    private void btndashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndashActionPerformed
        new main_menu().setVisible(true);
    }//GEN-LAST:event_btndashActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIdActionPerformed
     Checknull.checkNull(txtCustomerId, "customer id", txtItemId);
    }//GEN-LAST:event_txtCustomerIdActionPerformed

    private void txtItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemIdActionPerformed
                Checknull.checkNull(txtItemId, "item", txtUnitPrice);
    }//GEN-LAST:event_txtItemIdActionPerformed

    private void txtStockQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockQtyActionPerformed
    Checknull.checkNull(txtStockQty, "stock", txtBuyQty);
    }//GEN-LAST:event_txtStockQtyActionPerformed

    private void txtUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitPriceActionPerformed
     Checknull.checkNull(txtUnitPrice, "unit", txtStockQty);
    }//GEN-LAST:event_txtUnitPriceActionPerformed

    private void txtBuyQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyQtyActionPerformed
       Checknull.checkNull(txtBuyQty, "buy", txtAmount);
        billCalculate();
       
    }//GEN-LAST:event_txtBuyQtyActionPerformed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        Checknull.checkNull(txtDiscount, "discount", txtDiscount);
        discountCalculate();
        tbData();
    }//GEN-LAST:event_txtDiscountActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
       Checknull.checkNull(txtAmount, "amount", txtUnitPrice);
    }//GEN-LAST:event_txtAmountActionPerformed

    private void txtTotalAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountActionPerformed

    private void txtPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentActionPerformed
       double balance=Double.parseDouble(txtPayment.getText())-netAmount;
       txtBalance.setText(String.valueOf(balance));
       txtBalance.grabFocus();
    }//GEN-LAST:event_txtPaymentActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
       addata();
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void txtInvoiceIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInvoiceIdActionPerformed
        Checknull.checkNull(txtInvoiceId, "invoice", txtCustomerId);
    }//GEN-LAST:event_txtInvoiceIdActionPerformed

    private void txtTotalDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalDiscountActionPerformed

    private void txtNetAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountActionPerformed

    private void txtCustomerIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyReleased
       searchCustomer();
    }//GEN-LAST:event_txtCustomerIdKeyReleased

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if(evt.getClickCount()==2){
            txtCustomerId.setText(jList1.getSelectedValue().split("-")[0]);

            jScrollPane2.setVisible(false);

        }
    }//GEN-LAST:event_jList1MouseClicked

    private void txtItemIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIdKeyReleased
       searchItem();
       if(evt.getKeyCode()==39){
       txtPayment.grabFocus();
       }
    }//GEN-LAST:event_txtItemIdKeyReleased

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        if(evt.getClickCount()==2){
            txtItemId.setText(jList2.getSelectedValue().split("-")[0]);
            searchOtherDetails();
            jScrollPane3.setVisible(false);
            try {
                ResultSet serch = db.serch("select * from stock where stat=1 and item_id='"+txtItemId.getText()+"'");
                if(serch.next()){
                Item_DTO.setItmeUnitId(serch.getString("id"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            

        }
    }//GEN-LAST:event_jList2MouseClicked

    private void txtUnitPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitPriceKeyTyped
      if(txtUnitPrice.getText().length()==10){
          evt.consume();
         }
    }//GEN-LAST:event_txtUnitPriceKeyTyped

    private void txtStockQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockQtyKeyTyped
        if(txtStockQty.getText().length()==10){
          evt.consume();
         }
    }//GEN-LAST:event_txtStockQtyKeyTyped

    private void txtBuyQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuyQtyKeyTyped
        if(txtBuyQty.getText().length()==10){
          evt.consume();
         }
    }//GEN-LAST:event_txtBuyQtyKeyTyped

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
       if(txtAmount.getText().length()==10){
          evt.consume();
         }
    }//GEN-LAST:event_txtAmountKeyTyped

    private void txtDiscountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyTyped
        if(txtDiscount.getText().length()==10){
          evt.consume();
         }
    }//GEN-LAST:event_txtDiscountKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
          try {
          UIManager.setLookAndFeel(new WindowsClassicLookAndFeel());
        } catch (Exception e) {
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sell_item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndash;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBalance;
    public static javax.swing.JTextField txtBuyQty;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtInvoiceId;
    private javax.swing.JTextField txtItemId;
    private javax.swing.JTextField txtNetAmount;
    private javax.swing.JTextField txtPayment;
    public static javax.swing.JTextField txtStockQty;
    private javax.swing.JTextField txtTotalAmount;
    private javax.swing.JTextField txtTotalDiscount;
    public static javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
 private void invoiceId() {
          try {
              txtTotalAmount.setText("0.00");
              txtTotalDiscount.setText("0.00");
              txtNetAmount.setText("0.00");
            ResultSet rs = db.serch("select count(invoice_id) as x from invoice");
            if(rs.next()){
                String counts = rs.getString("x");
                txtInvoiceId.setEditable(false);
                int count = Integer.parseInt(counts);
               ++count;
                if(count<10){
                txtInvoiceId.setText("IN00000"+count);
              
                }else if(count<100){
                 txtInvoiceId.setText("IN0000"+count);
              
                }else if(count<1000){
                    txtItemId.setText("IN000"+count);
              
                }else if(count<10000){
                    txtInvoiceId.setText("IN00"+count);
                }else if(count<100000){
                 txtInvoiceId.setText("IN0"+count);
                }else if(count<1000000){
                 txtInvoiceId.setText("IN"+count);
                }
                 
            }
           
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void searchCustomer() {
       try{
            if(!txtCustomerId.getText().trim().equals("")){
                if(txtCustomerId.getText().toUpperCase().contains("CN")){
                    ResultSet rs=  db.serch("SELECT * FROM  customer_register WHERE stat=1 AND customer_id  LIKE '"+txtCustomerId.getText().toUpperCase()+"%'");
                    java.util.Vector v = new java.util.Vector();
                    jScrollPane2.setVisible(false);
                    while(rs.next()){
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id")+"-"+rs.getString("frist_name")+" "+rs.getString("last_name"));
                    }
                    jList1.setListData(v);
                }else{
                    ResultSet rs=  db.serch("SELECT * FROM customer_register WHERE stat=1 AND frist_name LIKE '"+txtCustomerId.getText().toUpperCase()+"%'");
                    java.util.Vector v = new java.util.Vector();
                    jScrollPane2.setVisible(false);
                    while(rs.next()){
                        jScrollPane2.setVisible(true);
                        v.add(rs.getString("customer_id")+"-"+rs.getString("frist_name")+" "+rs.getString("last_name"));
                    }
                    jList1.setListData(v);
                }
            }else{
                jScrollPane2.setVisible(false);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void searchItem() {
             try{
            if(!txtItemId.getText().trim().equals("")){
                if(txtItemId.getText().toUpperCase().contains("IT")){
                    ResultSet rs=  db.serch("SELECT * FROM  item WHERE stat=1 AND item_id  LIKE '"+txtItemId.getText().toUpperCase()+"%'");
                    java.util.Vector v = new java.util.Vector();
                    jScrollPane3.setVisible(false);
                    while(rs.next()){
                        jScrollPane3.setVisible(true);
                        v.add(rs.getString("item_id")+"-"+rs.getString("name"));
                    }
                    jList2.setListData(v);
                }else{
                    ResultSet rs=  db.serch("SELECT * FROM item WHERE stat=1 AND name LIKE '"+txtItemId.getText().toUpperCase()+"%'");
                    java.util.Vector v = new java.util.Vector();
                    jScrollPane3.setVisible(false);
                    while(rs.next()){
                        jScrollPane3.setVisible(true);
                         v.add(rs.getString("item_id")+"-"+rs.getString("name"));
                    }
                    jList2.setListData(v);
                }
            }else{
                jScrollPane3.setVisible(false);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void searchOtherDetails() {
        try {
            int i=0;
            ResultSet serch = db.serch("select * from stock where stat=1 AND item_id='"+txtItemId.getText()+"'");
            while(serch.next()){
            i++;
            }
            if(i<=1){
                ResultSet serch1 = db.serch("select * from stock where stat=1 AND item_id='"+txtItemId.getText()+"'");
                if(serch1.next()){
                txtUnitPrice.setText(serch1.getString("selling_price"));
                txtStockQty.setText(serch1.getString("qty"));
                txtBuyQty.grabFocus();
                }
            }else{
                Item_DTO.setItemId(txtItemId.getText());
                new Item_Dub().setVisible(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

   

    private void billCalculate() {
        amount =Integer.parseInt(txtBuyQty.getText())*Double.parseDouble(txtUnitPrice.getText());
       txtAmount.setText(String.valueOf(amount));
       txtDiscount.grabFocus();
    }

    private void discountCalculate() {
       discount =Integer.parseInt(txtBuyQty.getText())*Double.parseDouble(txtDiscount.getText());
       subAmount=amount-discount;
       totalBill();
    }

    private void totalBill() {
       avBillAmount=Double.parseDouble(txtTotalAmount.getText());
       avBillAmount=avBillAmount+amount;
       txtTotalAmount.setText(String.valueOf(avBillAmount));
       
       avBillDiscount=Double.parseDouble(txtTotalDiscount.getText());
       avBillDiscount=avBillDiscount+discount;
       txtTotalDiscount.setText(String.valueOf(avBillDiscount));
       
       netAmount=avBillAmount-avBillDiscount;
       txtNetAmount.setText(String.valueOf(netAmount));
       
    }

    private void tbData() { 
        try {
            DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();

         Vector v =new Vector ();
         v.add(txtItemId.getText());
           ResultSet serch = db.serch("SELECT * FROM item WHERE item_id='"+txtItemId.getText()+"'");
         if(serch.next()){
         v.add(serch.getString("name"));
         }
         DecimalFormat df = new DecimalFormat("0.00");
           String sellingPrice =df.format(Double.parseDouble(txtUnitPrice.getText()));
            v.add(sellingPrice);
            v.add(txtBuyQty.getText());
            v.add(amount);
            v.add(discount);
            v.add(subAmount);
            v.add(Item_DTO.getItmeUnitId());
            dtm.addRow(v);
            clearFeald();
    }
 catch(Exception e){
    e.printStackTrace();
    
}}

    private void clearFeald() {
      txtItemId.setText(null);
      txtUnitPrice.setText(null);
      txtStockQty.setText(null);
      txtBuyQty.setText(null);
      txtAmount.setText(null);
      txtDiscount.setText(null);
      txtItemId.grabFocus();
    }

    private void addata() {
        try {
            db.getNewConnection().setAutoCommit(false);
          Savepoint savepoint= db.getNewConnection().setSavepoint();
            try {
              
              
                  String registerDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
                db.iud("INSERT INTO invoice VALUES('"+txtInvoiceId.getText()+"','"+txtCustomerId.getText().toUpperCase()+"',"
                        + "'"+txtTotalAmount.getText()+"','"+txtTotalDiscount.getText()+"','"+txtNetAmount.getText()+"','"+common.SystemData.getEmployee()+"','"+registerDate+"','"+1+"')");
                
                for(int row =0; row < jTable1.getRowCount();row++){
            String itemid=jTable1.getValueAt(row, 0).toString().trim();
            String unitPrice=jTable1.getValueAt(row, 2).toString().trim();
            String qty=jTable1.getValueAt(row, 3).toString().trim();
            int qty1=Integer.parseInt(qty);
            String amount=jTable1.getValueAt(row, 4).toString().trim();
            String discount=jTable1.getValueAt(row, 5).toString().trim();
            String unitId=jTable1.getValueAt(row, 7).toString().trim();
                    System.out.println(unitId+" u");
                    System.out.println("1");
            String grnItemSQL="INSERT INTO invoice_item (item_id,invoice_id,unit_price,qty,amount,discount,stat) VALUES('"+itemid+"','"+txtInvoiceId.getText()+"','"+unitPrice+"','"+qty+"','"+amount+"','"+discount+"','"+1+"')";
            db.iud(grnItemSQL);
                    System.out.println("2");
             ResultSet serch = db.serch("SELECT * FROM stock WHERE id='"+unitId+"'");
                    System.out.println("3");
            if(serch.next()){
                System.out.println("4");
                System.out.println(serch.getString("qty"));
                int avQty=serch.getInt("qty");
                int newQty=avQty-qty1;
                 db.iud("UPDATE stock set qty='"+newQty+"' where id='"+unitId+"'");
            }
                   
           }
                 JOptionPane.showMessageDialog(this, "successful !!!");
            } catch (Exception e) {
                db.getNewConnection().rollback(savepoint);
            e.printStackTrace();
            }
            db.getNewConnection().commit();
        db.getNewConnection().setAutoCommit(true);
        saveclear();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void saveclear() {
        txtInvoiceId.setText(null);
        txtCustomerId.setText(null);
        txtTotalAmount.setText(null);
        txtTotalDiscount.setText(null);
        txtNetAmount.setText(null);
        txtPayment.setText(null);
        txtBalance.setText(null);
         DefaultTableModel dtm =(DefaultTableModel)jTable1.getModel();
        dtm.setRowCount(0);
        invoiceId();
    }

}
